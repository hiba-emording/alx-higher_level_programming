# FILE: tests/4-print_square.txt

# MODULE: print_square.py
# DESCRIPTION: This module contains a function to print a square of a given size using '#'.

# FUNCTION: print_square
# DESCRIPTION:
#   - Takes one argument 'size', an integer.
#   - Prints a square with the character '#' of the specified size.
#   - Raises:
#	TypeError if 'size' is not an int.
#   	ValueError if 'size' is less than 0.

# USAGE:
#   - >>> print_square = __import__('4-print_square').print_square
#   - >>> print_square(size)
#     Output

# Test Cases:

>>> print_square = __import__('4-print_square').print_square

# Group 1 (Valid Cases):
# Case 1: Printing a square of size 5(int):
	>>> print_square(5)
	#####
	#####
	#####
	#####
	#####

# Case 2: Printing a square of size 1(int):
	>>> print_square(1)
	#

# Case 3: Edge case (zero size)
>>> print_square(0)

# Group 2 (Edge Cases):
# Case 4: Invalid size (negative)
>>> print_square(-2)
Traceback (most recent call last):
ValueError: size must be >= 0

# Case 5: Invalid type (string)
>>> print_square("seven")
Traceback (most recent call last):
TypeError: size must be an integer

# Case 6: Invalid type and size (float, negative)
>>> print_square(-3.5)
Traceback (most recent call last):
TypeError: size must be an integer

# Case 7: No Argument:
>>> print_square()
Traceback (most recent call last):
TypeError: print_square() missing 1 required positional argument: 'size'
